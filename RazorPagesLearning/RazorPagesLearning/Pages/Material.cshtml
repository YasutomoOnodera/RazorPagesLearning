@page
@using RazorPagesLearning.Data.Models
@model RazorPagesLearning.Pages.MaterialModel
@{
    ViewData["Title"] = "Material";
}

<div class="p-page-title">
    <span>資材販売</span>
</div>
<!-- メインレイアウト__2カラム -->
<article id="Message" class="p-main-wrap">
    <section>
        <h1>商品選択</h1>
        <article>
            <article class="d-flex justify-content-between">
                <div class="d-flex">
                    <div class="p-datachip">
                        <h1>合計金額(税抜)</h1>
                        <p id="total">&yen;0</p>
                    </div>


                </div>
                <button type="button" class="o-button__done submit" id="confirmButton" data-toggle="modal" data-target="#exampleModalLong">購入</button>
            </article>
            <!-- エラーリストを表示 -->
            @if (0 != Model.viewModel.errorList.Count)
            {
                <div class="o-message__error">
                    @foreach (var item in Model.viewModel.errorList)
                    {
                        @item<br />
                    }
                </div>
            }
            <div class="o-border__bold"></div>
            <article>
                <div class="p-table">

                    <form method="post">

                        <table id="demoTableA" class="table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="width:3rem;">
                                    </th>
                                    <th>商品名</th>
                                    <th>サイズ</th>
                                    <th>備考</th>
                                    <th style="width:4rem;">単価(税抜)</th>
                                    <th style="width:4rem;">在庫数</th>
                                    <th style="width:4rem;">発注数</th>
                                    <th style="width:4rem;">小計(税抜)</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var (stock, idx) in Model.viewModel.STOCKs.Select((item, idx) => (item, idx)))
                                {
                                    <tr>
                                        <td align="center">
                                            <button type="button" data-toggle="modal" data-target="#modal-detail" onclick="onShowPopStockHistory(@stock.ID)">履歴</button>
                                            <input type="hidden" asp-for="@Model.viewModel.WK_REQUEST_DETAILs[idx].STOCK_ID" value="@stock.ID" />
                                            <input type="hidden" asp-for="@Model.viewModel.STOCKs[idx].ID" value="@stock.ID" />
                                        </td>
                                        <td>
                                            @stock.TITLE
                                            <input type="hidden" asp-for="@Model.viewModel.STOCKs[idx].TITLE" value="@stock.TITLE" />
                                        </td>
                                        <td>
                                            @stock.SUBTITLE
                                        </td>
                                        <td>
                                            @stock.NOTE
                                        </td>
                                        <td>
                                            &yen;@($"{stock.UNIT:N0}")
                                            <input type="hidden" id=@($"unit_{stock.UNIT}") value="@stock.UNIT" />
                                        </td>
                                        <td>
                                            @stock.STOCK_COUNT
                                            <input type="hidden" asp-for="@Model.viewModel.STOCKs[idx].STOCK_COUNT" value="@stock.STOCK_COUNT" />
                                        </td>
                                        <td>
                                            <input type="text" asp-for="@Model.viewModel.WK_REQUEST_DETAILs[idx].REQUEST_COUNT" />
                                        </td>
                                        <td>
                                            <div id=@($"subtotal_{stock.ID}")>&yen;0</div>
                                            <input type="hidden" id=@($"hidden_subtotal_{stock.ID}") value="0" />
                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>

                    </form>

                </div>
            </article>
        </article>
    </section>
</article>

<!--　[開始] 在庫履歴モーダル画面 -->
<partial name="PopUp/_PopStockHistory" />


<script>
    $(function () {
        //ページを開いたら、ローディング表示を非表示に
        VegaUtility.StaticFunctions.LoadingSplash.hide();
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 発注数変更
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeRequestCount = $('input:text[id$="_REQUEST_COUNT"]').change(function () {
        let requestCount = $(this).val();

        // 数値チェック
        if (false == VegaUtility.StaticFunctions.Math.isNumber(requestCount)) {
            $(this).val('');
            return;
        }

        // 小計を計算
        let unit = $(this).closest('tr').find('input:hidden[id^="unit_"]').val();
        let subtotal = Number(requestCount) * Number(unit);
        $(this).closest('tr').find('div[id^="subtotal_"]').text(
            '\xA5' +
            VegaUtility.StaticFunctions.Math.commaSplit(subtotal)
        );
        $(this).closest('tr').find('input:hidden[id^="hidden_subtotal_"]').val(subtotal);

        // 合計を計算
        let total = $('input:hidden[id^="hidden_subtotal_"]')
            .map(function () { return Number($(this).val()); })
            .get()
            .reduce((a, b) => a + b, 0);

        $('#total').text(
            '\xA5' +
            VegaUtility.StaticFunctions.Math.commaSplit(total)
        );
    });


    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 購入ボタン押下
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let request = $('#confirmButton').click(function () {
        $.confirm({
            title: '購入',
            content: '選択した資材を購入を購入しますか？',
            buttons: {
                'OK': function () {
                    let form = $('form');
                    form.attr('action', '?handler=confirm');
                    form.submit();
                },
                'キャンセル': function () {
                }
            }
        });
    });

    // 履歴ポップアップを表示
    var onShowPopStockHistory = function (id) {
        $("[name='popStockHistoryId']").val(id);
        VegaUtility.StaticFunctions.PopUp.show("#modal-history");
    }

</script>

