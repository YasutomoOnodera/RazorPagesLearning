@page
@model RazorPagesLearning.Pages.RequestNewModel
@{
    ViewData["Title"] = "RequestNew";
}


<!-- 本文 -->

<div id="Wrap">
    <form method="POST" name="newform" id="RequestNewForm">

        <div class="p-page-title">
            荷主メニュー/
            <span>新規登録</span>
        </div>
        <article id="New" class="p-main-wrap__2col">
            <section>

                <article class="p-scroll__head">
                    <h1></h1>
                    <article>
                        <div class=" p-buttom-wrap">
                            <button type="submit" class="o-button__clear" asp-page-handler="clear">クリア</button>
                            @if (Model.viewModel.Mode != RequestNewModel.Mode.update)
                            {
                                <button type="button" class="o-button__done" id="AddDataButton">登録</button>
                            }
                            else
                            {
                                <button type="button" class="o-button__done" id="UpdateDataButton">更新</button>
                            }
                        </div>
                        <div class="o-border__bold"></div>
                    </article>
                </article>
                <article class="p-scroll__body right">
                    <article class="u-wrap-mb">
                        <div class="p-datachip">
                            <h1>部課</h1>
                            <p>
                                <select asp-for="@Model.viewModel.selectedUserDepartment" asp-items="@Model.viewModel.userDepartmentList">
                                    <option value=""></option>
                                </select>
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>区分1</h1>
                            <p>
                                <select asp-for="@Model.viewModel.selectedClass1" asp-items="Model.viewModel.class1List">
                                    <option value=""></option>
                                </select>
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>区分2</h1>
                            <p>
                                <select asp-for="@Model.viewModel.selectedClass2" asp-items="@Model.viewModel.class2List">
                                    <option value=""></option>
                                </select>
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>お客様管理番号</h1>
                            <p>
                                <input type="text" maxlength="30" placeholder="文字30字" value="@Model.viewModel.inputData.CUSTOMER_MANAGE_NUMBER" asp-for="@Model.viewModel.inputData.CUSTOMER_MANAGE_NUMBER">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>題名</h1>
                            <p>
                                <input type="text" maxlength="200" placeholder="文字200字" value="@Model.viewModel.inputData.TITLE" asp-for="@Model.viewModel.inputData.TITLE">
                                <span asp-validation-for="@Model.viewModel.inputData.TITLE" class="text-danger"></span>                            
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>副題</h1>
                            <p>
                                <input type="text" maxlength="200" placeholder="文字200字" value="@Model.viewModel.inputData.SUBTITLE" asp-for="@Model.viewModel.inputData.SUBTITLE">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>Remark1</h1>
                            <p>
                                <input type="text" maxlength="72" placeholder="文字72字" value="@Model.viewModel.inputData.REMARK1" asp-for="@Model.viewModel.inputData.REMARK1">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>Remark2</h1>
                            <p>
                                <input type="text" maxlength="72" placeholder="文字72字" value="@Model.viewModel.inputData.REMARK2" asp-for="@Model.viewModel.inputData.REMARK2">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>備考</h1>
                            <p>
                                <input type="text" maxlength="200" placeholder="文字200字" value="@Model.viewModel.inputData.NOTE" asp-for="@Model.viewModel.inputData.NOTE">
                            </p>
                        </div>
                        <div class="p-datachip u-grow-1">
                            <h1>荷主項目</h1>
                            <div class="d-flex" style="padding: 5px;border: solid 1px #E1E6EF;">
                                <div class="w-100">
                                    <div class="d-flex">
                                        <textarea name="" id="" cols="3" rows="3" maxlength="2000" placeholder="文字2000字" >@Model.viewModel.inputData.SHIPPER_NOTE</textarea>
                                    </div>
                                    <div class="d-flex justify-content-end">
                                        <span>0</span>/1000
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="p-datachip">
                            <h1>形状</h1>
                            <p>
                                <input type="text" maxlength="20" placeholder="文字20字" value="@Model.viewModel.inputData.SHAPE" asp-for="@Model.viewModel.inputData.SHAPE">
                                <span asp-validation-for="@Model.viewModel.inputData.SHAPE" class="text-danger"></span>
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>制作日</h1>
                            <p>
                                <input type="text" placeholder="半角数字10桁" value="@Model.viewModel.inputData.PRODUCT_DATE" asp-for="@Model.viewModel.inputData.PRODUCT_DATE">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>時間(1)</h1>
                            <p>
                                <input type="text" maxlength="3" placeholder="文字3字" value="@Model.viewModel.inputData.TIME1" asp-for="@Model.viewModel.inputData.TIME1">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>時間(2)</h1>
                            <p>
                                <input type="text" maxlength="3" placeholder="文字3字" value="@Model.viewModel.inputData.TIME2" asp-for="@Model.viewModel.inputData.TIME2">
                            </p>
                        </div>
                        <div class="p-datachip">
                            <h1>廃棄予定日</h1>
                            <p>
                                <input type="text" placeholder="半角数字10桁" value="@Model.viewModel.inputData.SCRAP_SCHEDULE_DATE" asp-for="@Model.viewModel.inputData.SCRAP_SCHEDULE_DATE">
                            </p>
                        </div>
                    </article>
                </article>
                <article style="padding-top:0;">
                    <div class="o-border__bold__sm"></div>
                    <div class="u-wrap-mb">
                        @if (Model.viewModel.Mode == RequestNewModel.Mode.update)
                        {
                            <div>@Model.viewModel.selectDataNo 行目編集中</div>
                        }
                            @if (Model.viewModel.ErrorMesList.Count() > 0)
                            {
                                <div class="o-message__error">
                                    エラーメッセージ
                                    @*内容を出力する*@
                                    @Html.DisplayFor(e => Model.viewModel.ErrorMesList)
                                </div>
                            }
                        <div class="o-message__base">
                            倉庫から荷主への依頼事項を表示
                        </div>
                    </div>
                </article>
            </section>
            <section>
                <h1>表示件数表示件数</h1>
                <article>
                    <div class="p-buttom-wrap">
                        @* 編集モード時は disabled *@
                        @if (Model.viewModel.Mode != RequestNewModel.Mode.update)
                        {
                            <button type="button" class="o-button__done__2row" id="AddRequestButton">作業依頼追加</button>
                            <button type="button" class="o-button__del" id="DeleteButton">削除</button>
                        }
                        else
                        {
                            <button type="button" class="o-button__done__2row" disabled>作業依頼追加</button>
                            <button type="button" class="o-button__del" disabled>削除</button>
                        }
                    </div>
                    <div class="o-border__bold"></div>
                    <article class="p-table-sort">
                        <article class="p-pager-num justify-content-start">
                            <p>
                                <span id="checkret"></span>件選択しました。
                            </p>
                        </article>
                    </article>
                    <div class="o-border__bold__sm"></div>
                    <div class="p-table" style="padding-right:0;">
                        <table id="direct-selection" class="table-bordered">
                            <thead>
                                <tr>
                                    <th style="width:2rem;text-align: center;">No</th>
                                    <th style="width:2rem; text-align: center;">
                                        <input type="checkbox" id="direct-selection-all-checkbox" onclick="onDirectSelectionCheckbox()">
                                    </th>
                                    <th style="width:4rem;">
                                    </th>
                                    <th style="width:8rem;">お客様管理番号</th>
                                    <th>題名</th>
                                </tr>
                            </thead>
                            <tbody id="tbl">
                                @{ var wkstktmp = Model.viewModel.val_WK_STOCKs;
                                    @*nullの場合*@
                                    if (wkstktmp == null)
                                    {
                                        @*何も表示しない*@
                                    }
                                    else
                                    {
                                        int count = 0;
                                        foreach (var disp in Model.viewModel.val_WK_STOCKs
                                        .Select((item, index) => new { item, index }))
                                        {
                                            <tr>
                                                @{count++;}
                                                <td style="text-align: center;">@count</td>
                                                <td style="text-align: center;">
                                                    <input type="checkbox" id="newbox" value="@Model.viewModel.val_WK_STOCKs[disp.index].selected" asp-for="@Model.viewModel.val_WK_STOCKs[disp.index].selected">
                                                </td>
                                                <td style="text-align: center;">
                                                    <button type="button" style="background-color:#eab577" asp-page-handler="update" onclick="postFunc(@count, @Model.viewModel.val_WK_STOCKs[disp.index].WkStockList.ID)">編集</button>
                                                </td>
                                                <td>@disp.item.WkStockList.CUSTOMER_MANAGE_NUMBER</td>
                                                <td>@disp.item.WkStockList.TITLE</td>
                                            </tr>
                                            @*hiddenで送る必要があるもの*@
                                            @*作業依頼追加時に使用する対象のID*@
                                            <input type="hidden" value="@Model.viewModel.val_WK_STOCKs[disp.index].WkStockList.ID" asp-for="@Model.viewModel.val_WK_STOCKs[disp.index].WkStockList.ID">
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div class="o-message__base mt-2">
                        編集ボタンをクリックすると、表示されているデータを編集する事ができます。
                    </div>
                </article>
            </section>
            @*hiddenで送る必要があるもの*@
            @*モード情報*@
            <input type="hidden" value="@Model.viewModel.Mode" asp-for="@Model.viewModel.Mode">
            @*編集時に選択した行情報*@
            <input type="hidden" id="selectDataNo" value="@Model.viewModel.selectDataNo" asp-for="@Model.viewModel.selectDataNo">
            @*編集時に選択した在庫ワークID*@
            <input type="hidden" id="selectDataId" value="@Model.viewModel.selectDataId" asp-for="@Model.viewModel.selectDataId">

        </article>
    </form>
</div>

<!-- バリデーションライブラリをロード -->
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.16.0/jquery.validate.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>

<!-- 登録確認ライブラリをロード -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>

<script>

    // 削除 確認ダイアログ
    (function () {
        $('#DeleteButton').click(function () {
            confirmDialog(
                '削除',
                '選択した作業依頼を削除しますか？',
                'delete');
        });
    })();

    // 作業依頼追加 確認ダイアログ
    (function () {
        $('#AddRequestButton').click(function () {
            confirmDialog(
                '作業依頼追加',
                '選択した作業依頼を追加しますか？',
                'request');
        });
    })();

    // 新規登録 確認ダイアログ
    (function () {
        $('#AddDataButton, #UpdateDataButton').click(function () {
            confirmDialog(
                '新規登録',
                '入力した情報を登録しますか？',
                'create');
        });
    })();

    // 確認ダイアログ
    var confirmDialog = function (title, content, handler) {

        $.confirm({
            title: title,
            content: content,
            buttons: {
                'OK': function () {
                    //該当フォームに対して登録命令を出す
                    var tForm = $('#RequestNewForm');
                    tForm.attr('action', '?handler=' + handler);
                    tForm.submit();
                },
                'キャンセル': function () {
                }
            }
        });
    }

    $(document).ready(function () {
        //チェックボックスのクリック時にチェック状態と
        //要素のvalueの状態を同期させる
        //これを入れないと、ASPで要素の選択状態を切り替えた後にpostした時に、
        //正しくpostされるデータにチェック状態が反映されない。
        VegaUtility.StaticFunctions.ASPHelper.registerEvent_SynchronizeTheCheckboxValue();
    });

    // チェックボックスのチェック数を取得
    $(function () {
        $('input:checkbox').change(function () {
            var cnt = $('#tbl input:checkbox:checked').length;
            $('#checkret').text(cnt);
        }).trigger('change');
    });

    // 一括チェック選択ボックスを選択された時のイベント
    var onDirectSelectionCheckbox = function () {

        //チェックボックスの状態を取得する
        var cBox = $('#direct-selection-all-checkbox');
        var tChecked = cBox.prop('checked');

        //変更対象となるセレクタ
        var targetElement = $('#direct-selection :checkbox')
            .not("#direct-selection-all-checkbox");


        if (true == tChecked) {
            //チェックされていたら全チェックボックスにチェック
            targetElement
                .each(function (i, ele) {
                    $(ele).prop('checked', true);
                    $(ele).val(true);
                });
        }
        else {
            //チェックされていなかったら全チェックボックスのチェック外す
            targetElement
                .each(function (i, ele) {
                    $(ele).prop('checked', false);
                    $(ele).val(false);
                });
        }
    };

    var postFunc = function (count, id) {

       @*選択したNoの番号を保持*@
        $("#selectDataNo").val(count);
        $("#selectDataId").val(id);

        var tForm = $('form');
        tForm.attr('action', '?handler=update');
        tForm.submit();
    };

    $(document).ready(function () {
        //ページを開いたら、ローディング表示を非表示に
        VegaUtility.StaticFunctions.LoadingSplash.hide();
    });
</script>
