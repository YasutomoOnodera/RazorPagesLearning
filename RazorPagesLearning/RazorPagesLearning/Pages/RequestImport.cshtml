@page
@model RazorPagesLearning.Pages.RequestImportModel
@{
    ViewData["Title"] = "RequestImport";
}
<!-- 本文 -->

<div id="Wrap">
        <form method="post" enctype="multipart/form-data" id="RequestInportForm">
            <div class="p-page-title">
                荷主メニュー/
                <span>データ取込</span>
            </div>
            <article id="Message" class="p-main-wrap__2col">
                <section>
                    <h1>取込ファイル指定</h1>
                    <article>
                        <article class="p-buttom-wrap">
                            @*取り込み*@
                            <button type="button" id="ImportButton" class="o-button__base">取込</button>
                            @*全部クリア*@
                            <button type="button" class="o-button__clear" id="ClearForm">クリア</button>
                        </article>

                        <p class="o-border__bold__sm"></p>
                        <div class="u-wrap-mb">
                            <div class="p-datachip">
                                <h1>取込ファイル</h1>
                                <p>
                                    <input type="file" asp-for="@Model.viewModel.UploadFile" />
                                </p>
                            </div>
                            <div class="p-datachip">
                                <h1>取込モード</h1>
                                <p>
                                    <select asp-for=@Model.viewModel.SetItem.selected asp-items="@Model.viewModel.SetItem.display"></select>
                                </p>
                            </div>
                        </div>
                        @*エラーメッセージ表示*@
                        @{ var erdisp = Model.viewModel.Result.FirstOrDefault();
                            if (erdisp == null)
                            {
                                @*何も表示しない*@
                            }
                            else if (erdisp.NG_IMPORT_ERROR_MESSAGE == null)
                            {
                                @*何も表示しない*@
                            }
                            else
                            {
                                <div class="o-message__error mt-2">
                                    @Html.DisplayFor(e => erdisp.NG_IMPORT_ERROR_MESSAGE)
                                </div>
                            }
                        }
                    </article>
                </section>

                <section>
                    <h1>一覧</h1>
                    <article>
                        <input type="hidden" name="typeselect" value="@Model.viewModel.SetItem.selected" />
                        <div class="p-buttom-wrap">
                            @*フォーマットダウンロード Post用のボタン*@
                            <button type="submit" class="o-button__dl__fm__new" id="nfButton" asp-page-handler="NewFormat">
                                新規入庫フォーマット
                            </button>
                            @*@<button type="button" class="o-button__dl__fm__edit" id="otButton" asp-header="OtherFormat">*@
                            <a href="../Format/その他依頼フォーマット.xlsx" download="その他依頼フォーマット" class="o-button__dl__fm__edit">その他依頼フォーマット</a>
                            @*@</button>*@

                            @*作業依頼追加ボタンエラーメッセージあるとボタンが押せない。*@
                            @{var reqer = Model.viewModel.WkStockList;
                                int ercnt = 0;
                                @*nullの場合*@
                                if (reqer == null)
                                {
                                    <button type="button" class="o-button__done__2row" disabled>
                                        作業依頼
                                        <br>追加
                                    </button>
                                }
                                else
                                {
                                    for (int i = 0; i < reqer.Count; i++)
                                    {
                                        var er = reqer[i].IMPORT_ERROR_MESSAGE;
                                        if (er != null)
                                        {
                                            ercnt++;
                                        }
                                    }
                                    @*エラーメッセージなし*@
                                    if (ercnt == 0)
                                    {
                                        <button type="button" id="AddRequestButton" class="o-button__done__2row">
                                            作業依頼
                                            <br>追加
                                        </button>
                                    }
                                    @*エラーメッセージあり*@
                                    else
                                    {
                                        <button type="button" class="o-button__done__2row" disabled>
                                            作業依頼
                                            <br>追加
                                        </button>

                                    }
                                }
                            }
                        </div>
                        <div class="o-border__bold"></div>
                        <div class="p-table">
                            <table id="demoTableA" class="table-bordered">
                                <thead>
                                    <tr>
                                        <th style="width:2rem;text-align: center;">▼No</th>
                                        <th>取込行番号</th>
                                        <th>倉庫管理番号</th>
                                        <th>お客様管理番号</th>
                                        <th>題名</th>
                                        <th>
                                            エラーメッセージ
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @*取り込みデータのエラーメッセージ確認*@
                                    @{ var imperr = Model.viewModel.WkStockList;
                                        int impercnt = 0;
                                        @*nullの場合*@
                                        if (imperr == null)
                                        {
                                            @*何も表示しない*@
                                        }
                                        else
                                        {
                                            @for (int i = 0; i < imperr.Count; i++)
                                            {
                                                var er = imperr[i].IMPORT_ERROR_MESSAGE;
                                                if (er != null)
                                                {
                                                    impercnt++;
                                                }
                                            }
                                            if (impercnt == 0)
                                            {
                                                int count = 0;
                                                foreach (var item in Model.viewModel.WkStockList)
                                                {
                                                    @*エラーメッセージが無いデータを表示*@
                                                    if (item.IMPORT_ERROR_MESSAGE == null)
                                                    {
                                                        <tr>
                                                            @{count++;}
                                                            <td style="text-align: center;">@count</td>
                                                            <td>@Html.DisplayFor(e => item.IMPORT_LINE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.STORAGE_MANAGE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.CUSTOMER_MANAGE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.TITLE)</td>
                                                            <td>@Html.DisplayFor(e => item.IMPORT_ERROR_MESSAGE)</td>
                                                        </tr>
                                                    }

                                                }


                                            }
                                            else
                                            {
                                                int count = 0;
                                                @foreach (var item in Model.viewModel.WkStockList)
                                                {
                                                    @*エラーメッセージがあるデータを表示*@
                                                    if (item.IMPORT_ERROR_MESSAGE != null)
                                                    {
                                                        <tr>

                                                            @{count++;}
                                                            <td style="text-align: center;">@count</td>
                                                            <td>@Html.DisplayFor(e => item.IMPORT_LINE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.STORAGE_MANAGE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.CUSTOMER_MANAGE_NUMBER)</td>
                                                            <td>@Html.DisplayFor(e => item.TITLE)</td>
                                                            <td>@Html.DisplayFor(e => item.IMPORT_ERROR_MESSAGE)</td>

                                                        </tr>
                                                    }
                                                }
                                            }
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </article>
                </section>
            </article>
        </form>
</div>

<!-- 登録確認ライブラリをロード -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-confirm/3.3.0/jquery-confirm.min.js"></script>

<script>

    // データ取り込み 確認ダイアログ
    (function () {
        $('#ImportButton').click(function () {
            $.confirm({
                title: 'データ取り込み',
                content: 'データを取り込みを実行しますか？　　　　一覧にデータがある場合はクリアされます。',
                buttons: {
                    'OK': function () {
                        //該当フォームに対して登録命令を出す
                        var tForm = $('#RequestInportForm');
                        tForm.attr('action', '?handler=Create');
                        tForm.submit();
                    },
                    'キャンセル': function () {
                    }
                }
            });
        });
    })();

    // クリア 確認ダイアログ
    (function () {
        $('#ClearForm').click(function () {
            $.confirm({
                title: 'クリア',
                content: 'クリアを実行しますか？',
                buttons: {
                    'OK': function () {
                        //該当フォームに対して命令を出す
                        var tForm = $('#RequestInportForm');
                        tForm.attr('action', '?handler=Clear');
                        tForm.submit();
                    },
                    'キャンセル': function () {
                    }
                }
            });
        });
    })();


    // 作業依頼追加 確認ダイアログ
    (function () {
        $('#AddRequestButton').click(function () {
            $.confirm({
                title: '作業依頼追加',
                content: '作業依頼追加を実行しますか？',
                buttons: {
                    'OK': function () {
                        //該当フォームに対して登録命令を出す
                        var tForm = $('#RequestInportForm');
                        tForm.attr('action', '?handler=Request');
                        tForm.submit();
                    },
                    'キャンセル': function () {
                    }
                }
            });
        });
    })();

    // フォーマットダウンロード ポスト用ダイアログ
    //// 新規test
    //(function () {
    //    $('#nfButton').click(function () {
    //        $.confirm({
    //            buttons: {
    //                'OK': function () {
    //                    //該当フォームに対して登録命令を出す
    //                    var tForm = $('#RequestInportForm');
    //                    tForm.attr('action', '?handler=NewFormat');
    //                    tForm.submit();
    //                },
    //                'キャンセル': function () {
    //                }
    //            }
    //        });
    //    });
    //})();


    //// その他test
    //(function () {
    //    $('#otButton').click(function () {
    //        $.confirm({
    //            title: '作業依頼追加',
    //            content: '作業依頼追加を実行しますか？',
    //            buttons: {
    //                'OK': function () {
    //                    //該当フォームに対して登録命令を出す
    //                    var tForm = $('#RequestInportForm');
    //                    tForm.attr('action', '?handler=OtherFormat');
    //                    tForm.submit();
    //                },
    //                'キャンセル': function () {
    //                }
    //            }
    //        });
    //    });
    //})();

    $(document).ready(function () {
        //ページを開いたら、ローディング表示を非表示に
        VegaUtility.StaticFunctions.LoadingSplash.hide();
    });
</script>

