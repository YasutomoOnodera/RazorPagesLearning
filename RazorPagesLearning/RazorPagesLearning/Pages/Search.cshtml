@page "{id:int?}"
@model RazorPagesLearning.Pages.SearchModel
@{
    ViewData["Title"] = "Search";
}

<!-- DataTablesを読み取るために必要なコンポーネントを取り込み -->
<partial name="_DataTablesScriptsPartial" />

<script>

    $(function () {
        //チェックボックスのクリック時にチェック状態と
        //要素のvalueの状態を同期させる
        //これを入れないと、ASPで要素の選択状態を切り替えた後にpostした時に、
        //正しくpostされるデータにチェック状態が反映されない。
        VegaUtility.StaticFunctions.ASPHelper.registerEvent_SynchronizeTheCheckboxValue();

        //テーブルをセットアップする
        VegaUtility.StaticFunctions.TableHelper.setupTable(
            {
                //テーブル要素のID
                tableElementID: "#searchTable",
                //テーブル共通機能領域のサイズ(縦領域算出用)
                tableCommonFunctionElementID: "#TableOperationFunctions",
                //列左端　スクロール固定列数
                leftScrollFixedColumns: 2,
                //列のデフォルトカラムサイズ(省略可)
                columnSize: [
                    { width: '1rem', targets: 0 },
                    { width: '4rem', targets: 1 }
                ]
            }
        );

        // 条件指示部と結果一覧部の高さをメニューに合わせる
        $('#Serch-terms').height($('#Nav_menu').height());
        $('#Serch-list').height($('#Nav_menu').height());
    });

    ///ソート用にヘッダをクリックした時の動作
    var onHeaderClickForSort = function (columnName) {

        VegaUtility.StaticFunctions.TableHelper.onTableHeaderClickForSort(
            {
                //ソート対象となる列名はhiddenフィールドに入れてサーバサイドに送り、
                //サーバー側で処理させる。
                //ソート対象の列名が入るinput要素名
                sortOrderName: "#viewModel_sortColumn",
                //ソートの方向 : ASC or DES
                sortOrder: "#viewModel_sortDirection",
                //post対象となるフォーム名
                formName: "form",
                //ソートするカラム名
                columnName: columnName
            });
    };

</script>



<div class="p-page-title">
    荷主メニュー/
    <span>検索</span>
</div>
<article id="Search" class="j-slide__main">
    <form method="POST" style="height:inherit;">

        @* ソート関係の情報を保存 *@
        @* ソート対象のカラム列名 *@
        <input type="hidden" asp-for="@Model.viewModel.sortColumn" />
        @* ソートの方向 ASC or DES *@
        <input type="hidden" asp-for="@Model.viewModel.sortDirection" />

        @* 処理結果メッセージ *@
        <input type="hidden" id="resultMessage" value="@Model.viewModel.resultMessage" />

        <div class="p-main-wrap__2col">


            <!-- 条件指示 -->
            <section id="Serch-terms" style="position: relative;">
                <article class="p-scroll__head">
                    <h1>条件指示</h1>
                    <article>
                        <article class="p-buttom-wrap">
                            <button type="submit" class="o-button__base" asp-page-handler="list">検索</button>
                            <button type="submit" class="o-button__clear" asp-page-handler="clear">クリア</button>
                        </article>
                        <div class="o-border__bold"></div>
                    </article>
                    <article class="p-tab-wrap">
                        <ul class="nav nav-tabs">
                            <li class="nav-item">
                                <a href="#tab1" class="nav-link active" data-toggle="tab">検索条件</a>
                            </li>
                            <li class="nav-item">
                                <a href="#tab2" class="nav-link" data-toggle="tab">項目の並び替え</a>
                            </li>
                        </ul>
                    </article>
                </article>
                <article class="p-scroll__body__outer__height">
                    <article class="p-tab-wrap p-scroll__body__extend__height">
                        <div class="tab-content p-scroll__body__extend__height">

                            <!-- 検索条件 -->
                            <div id="tab1" class="tab-pane active p-scroll__body__extend__height">
                                <article class="p-buttom-wrap pr-3">
                                    <p>検索条件を追加する</p>
                                    <button type="button" class="o-button__plus j-serch-button__add"></button>
                                </article>
                                <article class="p-scroll__body__scroll__area">
                                    <article class="u-hide j-serch-button__add__area pt-2">
                                        <div class="p-datachip border-none">
                                            <h1>検索条件</h1>
                                            <div>

                                                @foreach (KeyValuePair<string, RazorPagesLearning.Pages.SearchModel.CondType> kvp in @Model.viewModel.searchCondition.dispSetting)
                                                {
                                                    string name = kvp.Key;
                                                    SearchModel.CondType cond = kvp.Value;

                                                    @* -------------------------------------------------- *@
                                                    @* 検索条件の表示に使う項目を保持するためhiddenに格納 *@
                                                    @* -------------------------------------------------- *@
                                                    <input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].switchable>
                                                    <input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].id>
                                                    <input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].type>
                                                    <input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].colName>

                                                    @* チェックボックスに関しては、hiddenに登録しておくことで選択値をPOSTさせる *@
                                                    @if (SearchModel.CondType.SearchType.CheckBox_2Row == cond.type ||
                                                       SearchModel.CondType.SearchType.CheckBox == cond.type)
                                                    {
                                                        @foreach (KeyValuePair<string, string> checkBox in cond.checkBoxes)
                                                        {
                                                            <input type="hidden" name=@($"viewModel.searchCondition.dispSetting[{name}].checkBoxes.{checkBox.Key}") value="@checkBox.Value" />
                                                        }
                                                    }
                                                    else if (SearchModel.CondType.SearchType.Select == cond.type ||
                                                        SearchModel.CondType.SearchType.SelectText_AndOr == cond.type)
                                                    {
                                                        @foreach (KeyValuePair<string, string> select in cond.selects)
                                                        {
                                                            <input type="hidden" name=@($"viewModel.searchCondition.dispSetting[{name}].selects.{select.Key}") value="@select.Value" />
                                                        }
                                                    }

                                                    @if (false == cond.switchable)
                                                    {
                                                        <input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].enable>
                                                        continue;
                                                    }

                                                    @* -------------------------------------------------- *@
                                                    @* 切り替え可能な検索条件のチェックボックス状態表示   *@
                                                    @* -------------------------------------------------- *@
                                                    <p>
                                                        @if (cond.enable)
                                                        {
                                                            <input type="checkbox" asp-for=@Model.viewModel.searchCondition.dispSetting[name].enable onclick="toggleCondEnable('@cond.id');" checked value="true">
                                                        }
                                                        else
                                                        {
                                                            <input type="checkbox" asp-for=@Model.viewModel.searchCondition.dispSetting[name].enable onclick="toggleCondEnable('@cond.id');">

                                                        }
                                                        <span>@name</span>
                                                    </p>
                                                }
                                            </div>
                                        </div>
                                    </article>
                                    <div class="o-border__bold__sm"></div>
                                    <article class="u-wrap-mb">
                                        @foreach (KeyValuePair<string, RazorPagesLearning.Pages.SearchModel.CondType> kvp in @Model.viewModel.searchCondition.dispSetting)
                                        {
                                            @* 表示ラベル名 *@
                                            string name = kvp.Key;
                                            @* 検索条件のタイプ *@
                                            SearchModel.CondType cond = kvp.Value;
                                            @* 検索条件名毎の表示設定 *@
                                            var dispSetting = Model.viewModel.searchCondition.dispSetting.First(e => e.Value.id == cond.id);

                                            int loopCount = 0;
                                            int checkBoxCount = 0;

                                            string div1 = "<div " + "id=" + cond.id + @" class=""p-datachip border-none"" ";
                                            string div2 = "<div " + "id=" + cond.id + @" class=""p-datachip"" ";
                                            string style = @"style=""display: none;"">";

                                            @if (true == cond.enable)
                                            {
                                                style = ">";
                                            }
                                            div1 = div1 + style;
                                            div2 = div2 + style;

                                            @* -------------------------------------------------- *@
                                            @* チェックボックス2列表示                            *@
                                            @*   type="checkbox"では状態を表示するのみで、        *@
                                            @*   サーバー側にはhiddenで登録した値をPOSTする。     *@
                                            @* -------------------------------------------------- *@
                                            @if (SearchModel.CondType.SearchType.CheckBox_2Row == cond.type)
                                            {
                                                checkBoxCount = cond.checkBoxes.Count();

                                                @Html.Raw(div1);
                                                <h1>@name</h1>

                                                @foreach (KeyValuePair<string, string> checkBox in cond.checkBoxes)
                                                {
                                                    loopCount++;

                                                    @if (1 == loopCount)
                                                    {
                                                        @Html.Raw("<div>");
                                                    }

                                                    <p>
                                                        @if (Model.viewModel.searchCondition.dispSetting[name].checkedDic.ContainsKey(checkBox.Key) &&
                                                           Model.viewModel.searchCondition.dispSetting[name].checkedDic[checkBox.Key])
                                                        {
                                                            <input type="checkbox" name=@($"viewModel.searchCondition.dispSetting[{name}].checkedDic.{checkBox.Key}") checked="checked" value="true" />
                                                        }
                                                        else
                                                        {
                                                            <input type="checkbox" name=@($"viewModel.searchCondition.dispSetting[{name}].checkedDic.{checkBox.Key}") />
                                                        }
                                                        <span>@checkBox.Value</span>
                                                    </p>

                                                    @if ((checkBoxCount + 1) / 2 == loopCount)
                                                    {
                                                        @Html.Raw("</div>");
                                                        @Html.Raw("<div>");
                                                    }

                                                    @if (checkBoxCount == loopCount)
                                                    {
                                                        @Html.Raw("</div>");
                                                    }
                                                }
                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* チェックボックス                                   *@
                                            @*   type="checkbox"では状態を表示するのみで、        *@
                                            @*   サーバー側にはhiddenで登録した値をPOSTする。     *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.CheckBox == cond.type)
                                            {
                                                checkBoxCount = cond.checkBoxes.Count();

                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                @foreach (KeyValuePair<string, string> checkBox in cond.checkBoxes)
                                                {
                                                    loopCount++;

                                                    <p>
                                                        @if (Model.viewModel.searchCondition.dispSetting[name].checkedDic.ContainsKey(checkBox.Key) &&
                                                           Model.viewModel.searchCondition.dispSetting[name].checkedDic[checkBox.Key])
                                                        {
                                                            <input type="checkbox" name=@($"viewModel.searchCondition.dispSetting[{name}].checkedDic.{checkBox.Key}") checked="checked" value="true" />
                                                        }
                                                        else
                                                        {
                                                            <input type="checkbox" name=@($"viewModel.searchCondition.dispSetting[{name}].checkedDic.{checkBox.Key}") />
                                                        }

                                                        <span>@checkBox.Value</span>
                                                    </p>
                                                }
                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* テキスト入力(FromTo)                               *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.Text_FromTo == cond.type)
                                            {
                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                <p>
                                                    <input type="text" maxlength="40" size="14" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textFrom" />
                                                    <span>&nbsp;〜&nbsp;</span>
                                                    <input type="text" maxlength="1024" size="14" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textTo" />
                                                </p>

                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* テキスト入力(AND/OR)                               *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.Text_AndOr == cond.type)
                                            {
                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                <p>
                                                    @* テキスト入力 *@
                                                    <input type="text" maxlength="40" size="14" asp-for="@Model.viewModel.searchCondition.dispSetting[name].text1" />

                                                    @* AND/OR *@
                                                    @if (RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And == Model.viewModel.searchCondition.dispSetting[name].radio1)
                                                    {
                                                        <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked>
                                                        <span>AND</span>
                                                        <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or">
                                                        <span>OR</span>
                                                    }
                                                    else
                                                    {
                                                        <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And">
                                                        <span>AND</span>
                                                        <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>
                                                        <span>OR</span>
                                                    }
                                                </p>

                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* テキスト入力2(AND/OR)                              *@
                                            @* お客様項目、ProjectNo、データNo                    *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.Text2_AndOr == cond.type ||
                                                SearchModel.CondType.SearchType.CustomerItem == cond.type)
                                            {
                                                int rowCount = 0;
                                                @if (SearchModel.CondType.SearchType.Text2_AndOr == cond.type)
                                                {
                                                    rowCount = 1;
                                                }
                                                else if (SearchModel.CondType.SearchType.CustomerItem == cond.type)
                                                {
                                                    rowCount = 3;
                                                }

                                                @Html.Raw(div1);
                                                <h1>@name</h1>

                                                @if (1 < rowCount)
                                                {
                                                    @Html.Raw("<div>");
                                                }

                                                @for (int i = 0; i < rowCount; i++)
                                                {

                                                    <p>
                                                        @{ int idx1 = (i + 1) * 2 - 1;
                                                            int idx2 = (i + 1) * 2;
                                                            int idx3 = (i + 1);
                                                        }

                                                        @if (1 == idx3)
                                                        {
                                                            @* テキスト入力 *@
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text1" maxlength="20" style="width:70px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx1}") />
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text2" maxlength="1024" style="width:110px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx2}") />

                                                            @* AND/OR *@
                                                            @if (RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And == Model.viewModel.searchCondition.dispSetting[name].radio1)
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked>
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or">
                                                                <span>OR</span>
                                                            }
                                                            else
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And">
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio1 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>
                                                                <span>OR</span>
                                                            }
                                                        }
                                                        else if (2 == idx3)
                                                        {
                                                            @* テキスト入力 *@
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text3" maxlength="20" style="width:70px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx1}") />
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text4" maxlength="1024" style="width:110px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx2}") />

                                                            @* AND/OR *@
                                                            @if (RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And == Model.viewModel.searchCondition.dispSetting[name].radio2)
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio2 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked>
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio2 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or">
                                                                <span>OR</span>
                                                            }
                                                            else
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio2 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And">
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio2 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>
                                                                <span>OR</span>
                                                            }
                                                        }
                                                        else if (3 == idx3)
                                                        {
                                                            @* テキスト入力 *@
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text5" maxlength="20" style="width:70px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx1}") />
                                                            <input type="text" value="@Model.viewModel.searchCondition.dispSetting[name].text6" maxlength="1024" style="width:110px;" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx2}") />

                                                            @* AND/OR *@
                                                            @if (RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And == Model.viewModel.searchCondition.dispSetting[name].radio3)
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio3 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked>
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio3 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or">
                                                                <span>OR</span>
                                                            }
                                                            else
                                                            {
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio3 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And">
                                                                <span>AND</span>
                                                                <input type="radio" asp-for=@Model.viewModel.searchCondition.dispSetting[name].radio3 value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>
                                                                <span>OR</span>
                                                            }
                                                        }

                                                        @* ↓こんな感じに書きたいけど「nameは文字列でないとNG、valueは変数でもOK」という制約があるっぽい(経験則) *@
                                                        @* ----------------------------------------------------------------------------------------------------- *@
                                                        @* テキスト入力 *@
                                                        @*<input type="text" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx1}") value=@($"Model.viewModel.searchCondition.dispSetting[{name}].text{idx1}") maxlength="20" style="width:70px;" />*@
                                                        @*<input type="text" name=@($"viewModel.searchCondition.dispSetting[{name}].text{idx2}") value=@($"Model.viewModel.searchCondition.dispSetting[{name}].text{idx2}") maxlength="1024" style="width:110px;" />*@
                                                        @* AND/OR *@
                                                        @*<input type="radio" name=@($"viewModel.searchCondition.dispSetting[{name}].radio{idx3}") value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked="checked">*@
                                                        @*<span>AND</span>*@
                                                        @*<input type="radio" name=@($"viewModel.searchCondition.dispSetting[{name}].radio{idx3}") value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>*@
                                                        @*<span>OR</span>*@
                                                        @* ----------------------------------------------------------------------------------------------------- *@
                                                    </p>

                                                }
                                                @if (1 < rowCount)
                                                {
                                                    @Html.Raw("</div>");
                                                }

                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* セレクトボックス                                   *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.Select == cond.type)
                                            {
                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                <p>
                                                    <select name=@($"viewModel.searchCondition.dispSetting[{name}].selected")>
                                                        @foreach (KeyValuePair<string, string> select in cond.selects)
                                                        {
                                                            @if (select.Key == cond.selected)
                                                            {
                                                                <option name=@($"viewModel.searchCondition.dispSetting[{name}].selected") value="@select.Key" selected>@select.Value</option>
                                                            }
                                                            else
                                                            {
                                                                <option name=@($"viewModel.searchCondition.dispSetting[{name}].selected") value="@select.Key">@select.Value</option>
                                                            }
                                                        }
                                                    </select>

                                                    @* asp-xxxで生成する方法 selectsの内容が保持されないので上記の通り自前でselectを書くことにする *@
                                                    @* →selectsをhiddenに入れておけば保持されそう *@
                                                    @*<select name=@($"viewModel.searchCondition.dispSetting[{name}].selected") asp-items=@Model.viewModel.searchCondition.dispSetting[name].selects></select>*@
                                                    @*<input type="hidden" asp-for=@Model.viewModel.searchCondition.dispSetting[name].selects>*@
                                                </p>

                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* セレクトボックス テキストボックス (AND/OR)         *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.SelectText_AndOr == cond.type)
                                            {
                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                <p>
                                                    @* セレクトボックス *@
                                                    <select name=@($"viewModel.searchCondition.dispSetting[{name}].selected") style="width:80px">
                                                        @foreach (KeyValuePair<string, string> select in cond.selects)
                                                        {
                                                            @if (select.Key == cond.selected)
                                                            {
                                                                <option name=@($"viewModel.searchCondition.dispSetting[{name}].selected") value="@select.Key" selected>@select.Value</option>
                                                            }
                                                            else
                                                            {
                                                                <option name=@($"viewModel.searchCondition.dispSetting[{name}].selected") value="@select.Key">@select.Value</option>
                                                            }
                                                        }
                                                    </select>

                                                    @* テキストボックス *@
                                                    <input type="text" maxlength="40" size="14" asp-for="@Model.viewModel.searchCondition.dispSetting[name].text1" />

                                                    @* AND/OR *@
                                                    <input type="radio" name=@($"viewModel.searchCondition.dispSetting[{name}].radio") value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.And" checked="checked">
                                                    <span>AND</span>
                                                    <input type="radio" name=@($"viewModel.searchCondition.dispSetting[{name}].radio") value="@RazorPagesLearning.Service.DB.StockSearchService.ReadConfig.AndOr.Or" checked>
                                                    <span>OR</span>
                                                </p>

                                                @Html.Raw("</div>");
                                            }
                                            @* -------------------------------------------------- *@
                                            @* 倉庫管理番号                                       *@
                                            @* -------------------------------------------------- *@
                                            else if (SearchModel.CondType.SearchType.StorageManageNumber == cond.type)
                                            {
                                                @Html.Raw(div2);
                                                <h1>@name</h1>

                                                <p>
                                                    <input type="text" value="" maxlength="1" style="width:1px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList1" />
                                                    <input type="text" value="" maxlength="1" style="width:1px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList1" />
                                                    <input type="text" value="" maxlength="5" style="width:20px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList1" />
                                                    <input type="text" value="" maxlength="3" style="width:5px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList1" />
                                                    <span>&nbsp;〜&nbsp;</span>
                                                    <input type="text" value="" maxlength="1" style="width:1px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList2" />
                                                    <input type="text" value="" maxlength="1" style="width:1px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList2" />
                                                    <input type="text" value="" maxlength="5" style="width:20px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList2" />
                                                    <input type="text" value="" maxlength="3" style="width:5px" asp-for="@Model.viewModel.searchCondition.dispSetting[name].textList2" />
                                                </p>

                                                @Html.Raw("</div>");
                                            }
                                        }
                                    </article>
                                    <div class="o-border__bold__sm"></div>
                                </article>
                            </div>

                            <!-- 項目の並び替え -->
                            <div id="tab2" class="tab-pane">

                                <div id="cond_order"></div>
                                <div id="cond_sort"></div>

                                <article class="p-table u-o-hidden" style="height:auto;padding:0;">
                                    <table class="p-table__no-border">
                                        <thead>
                                            <tr>
                                                <th>一覧に表示する項目</th>
                                                <th>列の表示順</th>
                                                <th>並び順</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @foreach (var (ds, index) in Model.viewModel.colOrders.Select((item, index) => (item, index)))
                                            {
                                                <tr>
                                                    <td>
                                                        @{
                                                            string isChecked  = (true == ds.CHECK_STATUS) ? @"checked=""checked""" : "";
                                                            string isReadonly = (true == ds.CHECK_STATUS) ? ""                     : "readonly";
                                                        }

                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].SCREEN_ID" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].USER_ACCOUNT_ID" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].PHYS_COLUMN_NAME" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].LOGI_COLUMN_NAME" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].DEFAULT_ORDER" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].CREATED_AT" />
                                                        <input type="hidden" asp-for="@Model.viewModel.colOrders[index].UPDATED_AT" />

                                                        <input type="checkbox" id=@($"order_{index}_CHECK_STATUS") name=@($"viewModel.colOrders[{index}].CHECK_STATUS") value="@ds.CHECK_STATUS.ToString().ToLower()" size="1" @isChecked />
                                                        @ds.LOGI_COLUMN_NAME
                                                    </td>
                                                    <td>
                                                        <input type="text" id=@($"order_{index}_DISPLAY_ORDER") name=@($"viewModel.colOrders[{index}].DISPLAY_ORDER") value="@ds.DISPLAY_ORDER" maxlength="2" @isReadonly />
                                                    </td>
                                                    <td>
                                                        <input type="text" id=@($"order_{index}_SORT") name=@($"viewModel.colOrders[{index}].SORT") value="@ds.SORT" maxlength="2" @isReadonly />
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </article>
                            </div>

                        </div>
                    </article>
                </article>
                <div class="p-button__arrow">
                    <div class="o-button__arrow__left j-arrow__left"></div>
                </div>
            </section>



            <!-- 結果一覧 -->
            <section id="Serch-list">
                <article class="p-scroll__head">
                    <h1>結果一覧</h1>
                    <article>
                        <!-- テーブル操作関数群 -->
                        <div id="TableOperationFunctions">

                            <!-- ボタン類 -->
                            <article class="p-buttom-wrap">
                                <button type="submit" class="o-button__base" asp-page-handler="print">印刷</button>
                                <button type="submit" class="o-button__dl" asp-page-handler="excel">EXCEL</button>
                                <button type="submit" class="o-button__dl" asp-page-handler="csv">CSV</button>
                                <button type="button" class="o-button__done__2row" asp-page-handler="watchlist" id="watchlistButton">
                                    ウォッチリスト
                                    <br>追加
                                </button>
                                <button type="button" class="o-button__done__2row" id="requestButton">
                                    作業依頼
                                    <br>追加
                                </button>
                            </article>

                            <div class="o-border__bold"></div>

                            <!-- ページネーション情報の設定 -->
                            <article class="p-table-sort">
                                <article class="u-wrap-mr">

                                    <div class="p-datachip">
                                        <h1>
                                            表示件数
                                        </h1>
                                        <p>
                                            <select asp-for=@Model.paginationInfo.displayNumber asp-items="Model.paginationInfo.displayNumbers"
                                                    onchange="submit(this.form)"></select>
                                        </p>
                                    </div>

                                    <div class="p-datachip">
                                        <h1>現在のページ</h1>
                                        <p>
                                            <input type="checkbox"
                                                   onchange="VegaUtility.StaticFunctions.TableHelper.setThisPageCheckStatus(this)" />
                                        </p>
                                    </div>
                                    <div class="p-datachip">
                                        <h1>全てのページ</h1>
                                        <p>
                                            <input asp-for=@Model.paginationInfo.checkAllPage
                                                   onchange="submit(this.form)" />
                                        </p>
                                    </div>
                                </article>
                                <article>
                                    <article class="p-pager-num">
                                        <pagination-show-range info="@Model.paginationInfo"> </pagination-show-range>

                                        <data-table-checked-count checked-count-on-server="@Model.viewModel.checkedCountOnServer">
                                        </data-table-checked-count>
                                    </article>
                                    <pagination-pager info="@Model.paginationInfo" for="@Model.paginationInfo"> </pagination-pager>

                                </article>

                            </article>

                        </div>
                    </article>
                </article>
                <article class="p-scroll__body right">
                    @**
                     * [tableデザインメモ]
                     * 1.table要素を囲っているp-tableにおいて、max-widthを指定する事で横スクロールのスクロールバーが表示される。
                     *   この時、max-width="9999px"に指定しておく事で表示可能な適切なサイズに表示が切り替えられる。
                     * 2.p-tableの要素でmarginが指定されているが、data tables側のデザインと当たってうまく表示できないため、
                     *   style="margin:0"で要素を上書きしてしまう。
                     *@
                    <div class="p-table" max-width="9999px">
                        <table id="searchTable" class="table-bordered table-hover" style="margin:0">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th></th>

                                    @foreach (var ds in Model.viewModel.colOrders.OrderBy(e => e.DISPLAY_ORDER))
                                    {
                                        if (false == ds.CHECK_STATUS)
                                        {
                                            continue;
                                        }

                                        <th save-column-width-size-name="SEARCH_@ds.PHYS_COLUMN_NAME">
                                            <span onclick="onHeaderClickForSort('@ds.PHYS_COLUMN_NAME')">
                                                @Model.viewModel.getTargetSortSign(ds.PHYS_COLUMN_NAME)
                                            </span>
                                            @Html.Raw(ds.LOGI_COLUMN_NAME)
                                        </th>
                                    }
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var (item, index) in Model.viewModel.tableRows.Select((item, index) => (item, index)))
                                {
                                    <tr>
                                        <td style="text-align: center;">

                                            <input type="hidden"
                                                   asp-for=@Model.viewModel.tableRows[index].trackingIdentifier.dataId
                                                   value=@Model.viewModel.tableRows[index].trackingIdentifier.dataId />

                                            @*******************************************************
                                             * check boxの定義
                                             *   htmlデフォルトのcheckboxではクリック状態に応じて、
                                             *   checked属性が変化するだけでvalueの値は変化しない。
                                             *   本実装では、
                                             *   VegaUtility.StaticFunctions.ASPHelper.registerEvent_SynchronizeTheCheckboxValue関数で
                                             *   登録したイベントを経由して、
                                             *   hidden列の値を更新する事で更新処理を対応させる。
                                             *   サーバー側にはhidden列で登録した値を対応させる。
                                             *@
                                            <input id=@($"checkbox_isSelected{Model.viewModel.tableRows[index].trackingIdentifier.dataId}")
                                                   type="checkbox"
                                                   @if (true == Model.viewModel.tableRows[index].isSelected) { @: checked="checked"
                                                   }
                                                   name=@($"viewModel.tableRows[{index}].isSelected_dummy")
                                                   value=@(Model.viewModel.tableRows[index].isSelected.ToString().ToLower())
                                                   data-val-required="The isSelected field is required."
                                                   data-val=@(Model.viewModel.tableRows[index].isSelected.ToString().ToLower())>

                                            <input type="hidden"
                                                   id=@($"hidden-checkbox_isSelected{Model.viewModel.tableRows[index].trackingIdentifier.dataId}")
                                                   name=@($"viewModel.tableRows[{index}].isSelected")
                                                   value=@(Model.viewModel.tableRows[index].isSelected.ToString().ToLower()) />
                                            @******************************************************@

                                        </td>

                                        <td style="text-align: center;" class="button-2col">
                                            <div class="d-flex justify-content-center">
                                                <button type="button" onclick="onShowPopStockDetail(@item.data.ID)">詳細</button>
                                                <button type="button" onclick="onShowPopStockHistory(@item.data.ID)">履歴</button>
                                            </div>
                                        </td>

                                        @foreach (var ds in Model.viewModel.colOrders.OrderBy(e => e.DISPLAY_ORDER))
                                        {
                                            if (false == ds.CHECK_STATUS)
                                            {
                                                continue;
                                            }

                                            <td><div>
                                            @switch (ds.PHYS_COLUMN_NAME)
                                            {
                                                case "STORAGE_MANAGE_NUMBER":
                                                    @Html.DisplayFor(e => item.data.STORAGE_MANAGE_NUMBER)
                                                    break;
                                                case "STATUS":
                                                    @*@item.data.STATUS*@
                                                    @Html.Raw(Service.Utility.ViewHelper.HelperFunctions.toDomainValue(Model.viewModel.statusDomains, item.data.STATUS))
                                                    break;
                                                case "TITLE":
                                                    @Html.DisplayFor(e => item.data.TITLE)
                                                    break;
                                                case "SUBTITLE":
                                                    @Html.DisplayFor(e => item.data.SUBTITLE)
                                                    break;
                                                case "NOTE":
                                                    @Html.DisplayFor(e => item.data.NOTE)
                                                    break;
                                                case "SHIPPER_NOTE":
                                                    @Html.DisplayFor(e => item.data.SHIPPER_NOTE)
                                                    break;
                                                case "CUSTOMER_MANAGE_NUMBER":
                                                    @Html.DisplayFor(e => item.data.CUSTOMER_MANAGE_NUMBER)
                                                    break;
                                                case "PROCESSING_DATE":
                                                    @Service.Utility.ViewHelper.HelperFunctions.toFormattedString(item.data.PROCESSING_DATE, "yyyy/MM/dd")
                                                    break;
                                                case "SHAPE":
                                                    @Html.DisplayFor(e => item.data.SHAPE)
                                                    break;
                                                case "REMARK1":
                                                    @Html.DisplayFor(e => item.data.REMARK1)
                                                    break;
                                                case "REMARK2":
                                                    @Html.DisplayFor(e => item.data.REMARK2)
                                                    break;
                                                case "STOCK_COUNT":
                                                    @Html.DisplayFor(e => item.data.STOCK_COUNT)
                                                    break;
                                                default:
                                                    continue;
                                            }
                                            </div></td>
                                        }

                                    </tr>
                                }
                            </tbody>

                        </table>
                    </div>
                </article>
            </section>
        </div>
    </form>
</article>
<div class="o-button__arrow__right j-arrow__right"></div>

<!--　[開始] 在庫詳細モーダル画面 -->
<partial name="PopUp/_PopStockDetail" />

<!--　[開始] 在庫履歴モーダル画面 -->
<partial name="PopUp/_PopStockHistory" />

<script>
    $(function () {
        // 項目の並び替えのための準備
        sortCondOrder();
        sortCondSort();

        // 処理結果メッセージ表示
        dispResultMessage();
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 処理結果メッセージ表示
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let dispResultMessage = function () {
        let message = $('#resultMessage').val();
        if (0 < message.length) {
            $.confirm({
                title: '処理結果',
                content: message,
                buttons: {
                    'OK': function () {
                        // 閉じるだけで処理なし。
                    }
                }
            });
        }
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // ウォッチリスト追加ボタン押下
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let watchlist = $('#watchlistButton').click(function () {
        // 何故か、検索画面表示直後でしかajax通信できないので、submitしておく。
        $.confirm({
            title: 'ウォッチリスト追加',
            content: '選択したウォッチリストを追加しますか？',
            buttons: {
                'OK': function () {
                    let form = $('form');
                    form.attr('action', '?handler=watchlist');
                    form.submit();
                },
                'キャンセル': function () {
                }
            }
        });


        //let title = 'ウォッチリスト追加';
        //let content = '選択したウォッチリストを追加しますか？';
        //let action = 'watchlist';
        //
        //$.confirm({
        //    title: title,
        //    content: content,
        //    buttons: {
        //        'OK': function () {
        //            $.ajax({
        //                type: 'POST',
        //                url: location.href + '/?handler=' + action,
        //                headers: {
        //                    "XSRF-TOKEN": $('input[name="__RequestVerificationToken"][type="hidden"]').val()
        //                },
        //                data: $('form').serialize(),
        //                timeout: 100000
        //            }).then(
        //                data => {
        //                    // 成功メッセージがあれば、表示する？
        //                    console.log(data);
        //                },
        //                error => {
        //                    console.log(error);
        //                    alert('通信に失敗しました。');
        //                }
        //            );
        //        },
        //        'キャンセル': function () {
        //        }
        //    }
        //});

        //confirmOKCancel('ウォッチリスト追加', '選択したウォッチリストを追加しますか？', 'watchlist');
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 作業依頼追加ボタン押下
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let request = $('#requestButton').click(function () {
        // 何故か、検索画面表示直後でしかajax通信できないので、submitしておく。
        $.confirm({
            title: '作業依頼追加',
            content: '選択した作業依頼を追加しますか？',
            buttons: {
                'OK': function () {
                    let form = $('form');
                    form.attr('action', '?handler=request');
                    form.submit();
                },
                'キャンセル': function () {
                }
            }
        });

        //let title = '作業依頼追加';
        //let content = '選択した作業依頼を追加しますか？';
        //let action = 'request';
        //
        //$.confirm({
        //    title: title,
        //    content: content,
        //    buttons: {
        //        'OK': function () {
        //            $.ajax({
        //                type: 'POST',
        //                url: location.href + '/?handler=' + action,
        //                headers: {
        //                    "XSRF-TOKEN": $('input[name="__RequestVerificationToken"][type="hidden"]').val()
        //                },
        //                data: $('form').serialize(),
        //                timeout: 100000
        //            }).then(
        //                data => {
        //                    debugger;
        //                    // 成功メッセージがあれば、表示する？
        //                    console.log(data);

        //                    let downloadData = new Blob([data], { type: 'text/csv' });
        //                    let filename = 'error.csv';

        //                    // ファイルダウンロード用のURLを生成し、aタグにセット
        //                    let downloadUrl = (window.URL || window.webkitURL).createObjectURL(downloadData);
        //                    let link = document.createElement('a');
        //                    link.href = downloadUrl;
        //                    link.download = filename;

        //                    // クリックイベントを発火
        //                    link.click();
        //                    (window.URL || window.webkitURL).revokeObjectURL(downloadUrl);

        //                },
        //                error => {
        //                    console.log(error);
        //                    alert('通信に失敗しました。');
        //                }
        //            );
        //        },
        //        'キャンセル': function () {
        //        }
        //    }
        //});

        //confirmOKCancel('作業依頼追加', '選択した作業依頼を追加しますか？', 'request');
    });

	////////////////////////////////////////////////////////////////////////////////////////////////
	// 確認ダイアログ表示してアクション実行
    // title  : ダイアログタイトル
    // content: ダイアログ本文
    // action : アクション名
	////////////////////////////////////////////////////////////////////////////////////////////////
    let confirmOKCancel = function (title, content, action) {
        $.confirm({
            title: title,
            content: content,
            buttons: {
                'OK': function () {
                    // 何故か、検索画面表示直後でしかajax通信できないので、submitしておく。
                    let form = $('form');
                    form.attr('action', '?handler=' + action + '\'');
                    form.submit();

                    //$.ajax({
                    //    type: 'POST',
                    //    url: location.href + '/?handler=' + action,
                    //    headers: {
                    //        "XSRF-TOKEN": $('input[name="__RequestVerificationToken"][type="hidden"]').val()
                    //    },
                    //    data: $('form').serialize(),
                    //    //data: { "test": "hoge" },
                    //    timeout: 100000
                    //}).then(
                    //    data => {
                    //        // 成功メッセージがあれば、表示する？
                    //        console.log(data);
                    //    },
                    //    error => {
                    //        console.log(error);
                    //        alert('通信に失敗しました。');
                    //    }
                    //);
                },
                'キャンセル': function () {
                }
            }
        });
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 切り替え可能な検索条件の表示/非表示
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let toggleCondEnable = function (itemName) {
        $('#' + itemName).toggle();
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 項目の並び替え:チェックボックスクリック
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeOrderCheck = $('input[id$="_CHECK_STATUS"]').change(function () {
        let displayOrder = $(this).closest('tr').find('input[name$="DISPLAY_ORDER"]');
        let sort = $(this).closest('tr').find('input[name$="SORT"]');

        if (true == $(this).prop('checked')) {
            // 入力可とする
            displayOrder.prop('readOnly', false);
            sort.prop('readOnly', false);

            // -----------------------------------------------------------------
            // チェックを入れられた項目は最後尾(チェックONの個数)にする
            // -----------------------------------------------------------------
            let name = $(this).closest('tr').find('input[name$="PHYS_COLUMN_NAME"]').val();
            let order = $(this).closest('tbody').find('input[type="checkbox"][name$="CHECK_STATUS"]:checked').length;

            $('#cond_order input[name="' + name + '"]').val(order.toString());
            changeOrderRenumber($('#cond_order'), '_DISPLAY_ORDER');

            $('#cond_sort input[name="' + name + '"]').val(order.toString());
            changeOrderRenumber($('#cond_sort'), '_SORT');
        }
        else {
            // 表示をクリアする
            // ※val('')でvalue値が何故か消えないので、attr('value', '')もしておく
            displayOrder.val('');
            displayOrder.attr('value', '');
            sort.val('');
            sort.attr('value', '');

            // 入力不可とする
            displayOrder.prop('readOnly', true);
            sort.prop('readOnly', true);

            // -----------------------------------------------------------------
            // 列の表示順、並び順を再割り当て
            // -----------------------------------------------------------------
            changeOrderCmn(displayOrder, $('#cond_order'), '_DISPLAY_ORDER');
            sortCondOrder();

            changeOrderCmn(sort, $('#cond_sort'), '_SORT');
            sortCondSort();
        }
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 項目の並び替え:入力値の変更(列の表示順)
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeOrder = $('input[id$="_DISPLAY_ORDER"]').change(function () {
        // 入力値チェック
        if (false == changeOrderValidation($(this).val())) {
            let name = $(this).closest('tr').find('input[name$="PHYS_COLUMN_NAME"]').val();
            let value = $('#cond_order input[name="' + name + '"]').val();
            $(this).val(value);
            return;
        }

        // 列の表示順を再割り当て
        changeOrderCmn($(this), $('#cond_order'), '_DISPLAY_ORDER');

        // 変更前の値昇順に、項目を並び替えることで、次回の並び替え処理の準備をする。
        sortCondOrder();
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 項目の並び替え:入力値の変更(並び順)
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeSort = $('input[id$="_SORT"]').change(function () {
        // 入力値チェック
        if (false == changeOrderValidation($(this).val())) {
            let name = $(this).closest('tr').find('input[name$="PHYS_COLUMN_NAME"]').val();
            let value = $('#cond_sort input[name="' + name + '"]').val();
            $(this).val(value);
            return;
        }

        // 並び順を再割り当て
        changeOrderCmn($(this), $('#cond_sort'), '_SORT');

        // 変更前の値昇順に、項目を並び替えることで、次回の並び替え処理の準備をする。
        sortCondSort();
    });

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 項目の並び替え:入力値のチェック
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeOrderValidation = function (num) {
        // 数値チェック
        let regex = new RegExp(/^[0-9]+$/);
        if (false == regex.test(num)) {
            return false;
        }

        // 範囲チェック
        let min = 1;
        let max = $('#tab2').find('tbody').find('input[type="checkbox"][name$="CHECK_STATUS"]:checked').length;
        if (num < 1 || max < num) {
            return false;
        }

        return true;
    };

	////////////////////////////////////////////////////////////////////////////////////////////////
	// 列の表示順、並び順を再割り当て
    // obj    : 入力値変更されたinputタグ
    // condTag: 条件保持用のdivタグ
    // keyId  : 割り当て直した数値の格納先をid属性検索するためのキーワード
	////////////////////////////////////////////////////////////////////////////////////////////////
    let changeOrderCmn = function (obj, condTag, keyId) {
        // -----------------------------------------------------------------------------------------
        // 変更があった項目を除いて、1から順に変更内容と同じ値をスキップしながら、値を設定し直す。
        // -----------------------------------------------------------------------------------------
        // 変更された項目名と、その値
        let changedName = $(obj).closest('tr').find('input[name$="PHYS_COLUMN_NAME"]').val();
        let changedValue = $(obj).val();

        let orders = $(condTag).children();
        let no = 1;

        for (let i = 0; i < orders.length; i++) {
            let searchName = $(orders[i]).attr('name');
            let isChecked = $(obj).closest('tbody')
                .find('input[type="hidden"][name$="PHYS_COLUMN_NAME"][value="' + searchName + '"]').parent()
                .find('input[type="checkbox"][name$="CHECK_STATUS"]').prop('checked');

            if (false == isChecked) {
                // チェックボックス選択されていない項目なので採番スキップ
                continue;
            }

            if (changedName == searchName) {
                // 変更があった項目なので、採番は後回し
                $(orders[i]).attr('value', '');
            }
            else {
                // それ以外の項目は、変更内容と同じ値をスキップしながら、採番し直す
                if (no == Number(changedValue)) {
                    no++;
                }
                $(orders[i]).attr('value', no.toString());
                no++;
            }
        }

        // -----------------------------------------------------------------------------------------
        // 変更内容の値を設定する。
        // -----------------------------------------------------------------------------------------
        $(condTag).find('input[name="' + changedName + '"]').val(changedValue);

        // -----------------------------------------------------------------------------------------
        // 元の項目名の順に直す。
        // -----------------------------------------------------------------------------------------
        changeOrderRenumber(condTag, keyId);
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 元の項目名の順に直す
    // condTag: 条件保持用のdivタグ
    // keyId  : 割り当て直した数値の格納先をid属性検索するためのキーワード
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let changeOrderRenumber = function (condTag, keyId) {
        let orders = $(condTag).children();

        let physNames = $('#tab2').find('tbody').find('input[name$="PHYS_COLUMN_NAME"]');
        for (let i = 0; i < physNames.length; i++) {
            let idx = 0;
            for (; idx < orders.length; idx++) {
                if ($(orders[idx]).attr('name') == physNames[i].value) {
                    break;
                }
            }

            let targetId = '#order_' + i.toString() + keyId;
            $(targetId).val($(orders[idx]).attr('value'));
        }
    }

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 変更前の値昇順に、項目を並び替える。(列の表示順)
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let sortCondOrder = function () {
        sortCondCmn($('#cond_order'), 'DISPLAY_ORDER');
    };

    ////////////////////////////////////////////////////////////////////////////////////////////////
    // 変更前の値昇順に、項目を並び替える。(並び順)
    ////////////////////////////////////////////////////////////////////////////////////////////////
    let sortCondSort = function () {
        sortCondCmn($('#cond_sort'), 'SORT');
    };

	////////////////////////////////////////////////////////////////////////////////////////////////
	// 項目の並び替え判定条件のソート
    // condTag: 条件保持用のdivタグ
    // keyName: 変更値が列の表示順なのか並び順なのかを後方一致判定するためのname属性
    //          DISPLAY_ORDER: 列の表示順
    //          SORT         : 並び順
    //
    // <div id="cond_order">
    //     <input type="hidden" name="項目名" value="値" />
    //     <input type="hidden" name="項目名" value="値" />
    //     <input type="hidden" name="項目名" value="値" />
    //     <input type="hidden" name="項目名" value="値" />
    //     <input type="hidden" name="項目名" value="値" />
    // </div>
	////////////////////////////////////////////////////////////////////////////////////////////////
    let sortCondCmn = function (condTag, keyName) {
        // 物理名、表示順
        let names = $('#tab2').find('tbody').find('input[name$="PHYS_COLUMN_NAME"]');
        let values = $('#tab2').find('tbody').find('input[name$="' + keyName + '"]');

        // まずは、上から順番に詰め込む
        let str = "";
        for (let i = 0; i < names.length; i++) {
            str = str + '<input type="hidden" name="' + names[i].value + '" value="' + values[i].value + '" />';
        }
        $(condTag).html(str);

        // 値昇順にソートして詰め込み直す
        let sorted = $(condTag).find('input').sort(function (a, b) {
            return (Number($(a).val()) > Number($(b).val()) ? 1 : -1);
        });
        $(condTag).html(sorted);
    };


    // 詳細ポップアップを表示
    var onShowPopStockDetail = function (id) {
        $("[name='popStockDetailId']").val(id);
        VegaUtility.StaticFunctions.PopUp.show("#modal-detail");
    }

    // 履歴ポップアップを表示
    var onShowPopStockHistory = function (id) {
        $("[name='popStockHistoryId']").val(id);
        VegaUtility.StaticFunctions.PopUp.show("#modal-history");
    }


</script>