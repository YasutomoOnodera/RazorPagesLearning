// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RazorPagesLearning.Data;

namespace RazorPagesLearning.Data.Migrations
{
    [DbContext(typeof(RazorPagesLearningContext))]
    partial class RazorPagesLearningContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.CALENDAR_ADMIN", b =>
                {
                    b.Property<DateTimeOffset>("HOLIDAY");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("HOLIDAY");

                    b.ToTable("CALENDAR_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_ADMIN", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADDRESS1")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<string>("ADDRESS2")
                        .HasMaxLength(72);

                    b.Property<string>("CHARGE_NAME")
                        .HasMaxLength(72);

                    b.Property<string>("COMPANY")
                        .HasMaxLength(72);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("DEFAULT_FLIGHT_CODE")
                        .HasMaxLength(8);

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("DELIVERY_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("FAX");

                    b.Property<string>("MAIL")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL1")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL10")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL2")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL3")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL4")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL5")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL6")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL7")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL8")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL9")
                        .HasMaxLength(50);

                    b.Property<string>("SHIPPER_CODE")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("TEL")
                        .IsRequired();

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<string>("ZIPCODE")
                        .HasMaxLength(8);

                    b.HasKey("ID");

                    b.HasIndex("SHIPPER_CODE");

                    b.ToTable("DELIVERY_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_REQUEST", b =>
                {
                    b.Property<string>("TRANSPORT_ADMIN_CODE")
                        .HasMaxLength(128);

                    b.Property<string>("DELIVERY_REQUEST_NUMBER")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset?>("CONFIRM_DATETIME");

                    b.Property<DateTimeOffset?>("CORRECTION_DATETIME");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset?>("DELIVERY_DATE");

                    b.Property<string>("STATUS")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("TRANSPORT_ADMIN_CODE", "DELIVERY_REQUEST_NUMBER");

                    b.ToTable("DELIVERY_REQUESTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_REQUEST_DETAIL", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BARCODE")
                        .HasMaxLength(128);

                    b.Property<string>("CARGO_AC")
                        .HasMaxLength(128);

                    b.Property<string>("CARGO_NOTE")
                        .HasMaxLength(128);

                    b.Property<string>("CARGO_TITLE")
                        .HasMaxLength(128);

                    b.Property<string>("COMPANY")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("DELIVERY_AC")
                        .HasMaxLength(128);

                    b.Property<string>("DELIVERY_NOTE")
                        .HasMaxLength(128);

                    b.Property<string>("DELIVERY_REQUEST_DETAIL_NUMBER")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("DELIVERY_REQUEST_NUMBER")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("DELIVERY_TITLE")
                        .HasMaxLength(128);

                    b.Property<int?>("ROUTE");

                    b.Property<string>("TRANSPORT_ADMIN_CODE")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("TRUCK_CHARGE")
                        .HasMaxLength(20);

                    b.Property<int?>("TRUCK_MANAGE_NUMBER");

                    b.Property<string>("TRUCK_NUMBER")
                        .HasMaxLength(4);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.HasIndex("TRANSPORT_ADMIN_CODE", "DELIVERY_REQUEST_NUMBER");

                    b.ToTable("DELIVERY_REQUEST_DETAILs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DEPARTMENT_ADMIN", b =>
                {
                    b.Property<string>("SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("DEPARTMENT_NAME")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("SHIPPER_CODE", "DEPARTMENT_CODE");

                    b.ToTable("DEPARTMENT_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DOMAIN", b =>
                {
                    b.Property<string>("KIND")
                        .HasMaxLength(8);

                    b.Property<string>("CODE")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("JAPANESE_KIND");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<bool>("VALID_FLAG");

                    b.Property<string>("VALUE")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("KIND", "CODE");

                    b.ToTable("DOMAINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.MAIL_TEMPLATE", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("MAIL_TEMPLATE_CODE")
                        .HasMaxLength(128);

                    b.Property<string>("TEXT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.ToTable("MAIL_TEMPLATEs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.MESSAGE_ADMIN", b =>
                {
                    b.Property<int>("KIND");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("MESSAGE");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("KIND");

                    b.ToTable("MESSAGE_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.PASSWORD_HISTORY", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("PASSWORD")
                        .IsRequired();

                    b.Property<string>("PASSWORD_SALT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("PASSWORD_HISTORies");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.POLICY", b =>
                {
                    b.Property<int>("NAME");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<int>("VALUE");

                    b.HasKey("NAME");

                    b.ToTable("POLICies");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.REQUEST_HISTORY", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENT")
                        .HasMaxLength(100);

                    b.Property<int>("CONFIRM_COUNT");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<long>("DELIVERY_ADMIN_ID");

                    b.Property<int>("DETAIL_COUNT");

                    b.Property<string>("FLIGHT")
                        .HasMaxLength(8);

                    b.Property<string>("ORDER_NUMBER")
                        .HasMaxLength(8);

                    b.Property<string>("OWNER_ADDRESS")
                        .HasMaxLength(255);

                    b.Property<string>("OWNER_CHARGE")
                        .HasMaxLength(72);

                    b.Property<string>("OWNER_COMPANY")
                        .HasMaxLength(128);

                    b.Property<string>("OWNER_DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("OWNER_SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("OWNER_TEL")
                        .HasMaxLength(14);

                    b.Property<string>("OWNER_ZIPCODE")
                        .HasMaxLength(8);

                    b.Property<int>("REQUEST_COUNT");

                    b.Property<DateTimeOffset?>("REQUEST_DATE");

                    b.Property<string>("REQUEST_KIND")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("SHIP_RETURN_ADDRESS")
                        .HasMaxLength(255);

                    b.Property<string>("SHIP_RETURN_CHARGE_NAME")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("SHIP_RETURN_COMPANY")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_TEL")
                        .HasMaxLength(14);

                    b.Property<string>("SHIP_RETURN_ZIPCODE")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("SPECIFIED_DATE");

                    b.Property<string>("SPECIFIED_TIME")
                        .HasMaxLength(8);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<long>("USER_ACCOUNTID");

                    b.Property<string>("WMS_STATUS")
                        .HasMaxLength(8);

                    b.HasKey("ID");

                    b.ToTable("REQUEST_HISTORies");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.REQUEST_HISTORY_DETAIL", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ARRIVAL_TIME")
                        .HasMaxLength(128);

                    b.Property<string>("BARCODE")
                        .HasMaxLength(9);

                    b.Property<string>("CLASS1")
                        .HasMaxLength(8);

                    b.Property<string>("CLASS2")
                        .HasMaxLength(8);

                    b.Property<int?>("CONFIRM_COUNT");

                    b.Property<string>("CONTRACT1")
                        .HasMaxLength(8);

                    b.Property<string>("CONTRACT2")
                        .HasMaxLength(50);

                    b.Property<string>("COPYRIGHT1")
                        .HasMaxLength(8);

                    b.Property<string>("COPYRIGHT2")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("CUSTOMER_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<string>("DATA_NO1")
                        .HasMaxLength(20);

                    b.Property<string>("DATA_NO2")
                        .HasMaxLength(50);

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<string>("NOTE")
                        .HasMaxLength(200);

                    b.Property<string>("ORDER_NUMBER")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("PROCESSING_DATE");

                    b.Property<string>("PROCESS_JUDGE1")
                        .HasMaxLength(8);

                    b.Property<string>("PROCESS_JUDGE2")
                        .HasMaxLength(50);

                    b.Property<string>("PRODUCT_DATE")
                        .HasMaxLength(10);

                    b.Property<string>("PROJECT_NO1")
                        .HasMaxLength(20);

                    b.Property<string>("PROJECT_NO2")
                        .HasMaxLength(50);

                    b.Property<string>("REMARK1")
                        .HasMaxLength(72);

                    b.Property<string>("REMARK2")
                        .HasMaxLength(72);

                    b.Property<int?>("REQUEST_COUNT");

                    b.Property<long>("REQUEST_HISTORY_ID");

                    b.Property<DateTimeOffset?>("SCRAP_SCHEDULE_DATE");

                    b.Property<string>("SHAPE")
                        .HasMaxLength(20);

                    b.Property<string>("SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("SHIPPER_NOTE")
                        .HasMaxLength(2000);

                    b.Property<string>("SLIP_NUMBER")
                        .HasMaxLength(128);

                    b.Property<string>("STATUS")
                        .HasMaxLength(8);

                    b.Property<int?>("STOCK_COUNT");

                    b.Property<long>("STOCK_ID");

                    b.Property<string>("STOCK_KIND")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("STORAGE_DATE");

                    b.Property<string>("STORAGE_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset?>("STORAGE_RETRIEVAL_DATE");

                    b.Property<string>("SUBTITLE")
                        .HasMaxLength(200);

                    b.Property<string>("TIME1")
                        .HasMaxLength(3);

                    b.Property<string>("TIME2")
                        .HasMaxLength(3);

                    b.Property<string>("TITLE")
                        .HasMaxLength(200);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UNIT");

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset?>("WMS_REGIST_DATE");

                    b.Property<string>("WMS_STATUS")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("WMS_UPDATE_DATE");

                    b.HasKey("ID");

                    b.HasIndex("REQUEST_HISTORY_ID");

                    b.ToTable("REQUEST_HISTORY_DETAILs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.REQUEST_LIST", b =>
                {
                    b.Property<long>("STOCK_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.HasKey("STOCK_ID", "USER_ACCOUNT_ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("REQUEST_LISTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.SHIPPER_ADMIN", b =>
                {
                    b.Property<string>("SHIPPER_CODE")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<bool>("AFTERNOON_FLAG");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<bool>("CUSTOMER_ONLY_FLAG");

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<bool>("PASSWORD_FLAG");

                    b.Property<string>("SHIPPER_NAME")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("SHIPPER_CODE");

                    b.ToTable("SHIPPER_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.STOCK", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ARRIVAL_TIME")
                        .HasMaxLength(128);

                    b.Property<string>("BARCODE")
                        .HasMaxLength(9);

                    b.Property<long>("CHECK_CHASE_ID");

                    b.Property<string>("CLASS1")
                        .HasMaxLength(8);

                    b.Property<string>("CLASS2")
                        .HasMaxLength(8);

                    b.Property<string>("CONTRACT1")
                        .HasMaxLength(8);

                    b.Property<string>("CONTRACT2")
                        .HasMaxLength(50);

                    b.Property<string>("COPYRIGHT1")
                        .HasMaxLength(8);

                    b.Property<string>("COPYRIGHT2")
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("CUSTOMER_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<string>("DATA_NO1")
                        .HasMaxLength(20);

                    b.Property<string>("DATA_NO2")
                        .HasMaxLength(50);

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<string>("FILM_DETAIL_NO")
                        .HasMaxLength(3);

                    b.Property<string>("FILM_NO")
                        .HasMaxLength(7);

                    b.Property<bool>("HIDE_FLAG");

                    b.Property<string>("NOTE")
                        .HasMaxLength(200);

                    b.Property<string>("ORDER_NUMBER")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("PROCESSING_DATE");

                    b.Property<string>("PROCESS_JUDGE1")
                        .HasMaxLength(8);

                    b.Property<string>("PROCESS_JUDGE2")
                        .HasMaxLength(50);

                    b.Property<string>("PRODUCT_DATE")
                        .HasMaxLength(10);

                    b.Property<string>("PROJECT_NO1")
                        .HasMaxLength(20);

                    b.Property<string>("PROJECT_NO2")
                        .HasMaxLength(50);

                    b.Property<string>("REMARK1")
                        .HasMaxLength(72);

                    b.Property<string>("REMARK2")
                        .HasMaxLength(72);

                    b.Property<DateTimeOffset?>("SCRAP_SCHEDULE_DATE");

                    b.Property<string>("SHAPE")
                        .HasMaxLength(20);

                    b.Property<string>("SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("SHIPPER_NOTE")
                        .HasMaxLength(2000);

                    b.Property<string>("SHIP_RETURN_CHARGE_NAME")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("SHIP_RETURN_COMPANY")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("SLIP_NUMBER")
                        .HasMaxLength(128);

                    b.Property<string>("STATUS")
                        .HasMaxLength(8);

                    b.Property<int?>("STOCK_COUNT");

                    b.Property<string>("STOCK_KIND")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("STORAGE_DATE");

                    b.Property<string>("STORAGE_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset?>("STORAGE_RETRIEVAL_DATE");

                    b.Property<string>("SUBTITLE")
                        .HasMaxLength(200);

                    b.Property<string>("TIME1")
                        .HasMaxLength(3);

                    b.Property<string>("TIME2")
                        .HasMaxLength(3);

                    b.Property<string>("TITLE")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<int?>("UNIT");

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<long?>("WK_STOCK_ID");

                    b.Property<DateTimeOffset?>("WMS_REGIST_DATE");

                    b.Property<DateTimeOffset?>("WMS_UPDATE_DATE");

                    b.HasKey("ID");

                    b.HasIndex("WK_STOCK_ID")
                        .IsUnique()
                        .HasFilter("[WK_STOCK_ID] IS NOT NULL");

                    b.HasIndex("SHIPPER_CODE", "DEPARTMENT_CODE");

                    b.ToTable("STOCKs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.SYSTEM_SETTING", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADMIN_MAIL");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<int>("MAIL_PORT");

                    b.Property<string>("MAIL_SERVER")
                        .HasMaxLength(512);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.ToTable("SYSTEM_SETTINGs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.TRANSPORT_ADMIN", b =>
                {
                    b.Property<string>("CODE")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("CODE");

                    b.ToTable("TRANSPORT_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.TRUCK_ADMIN", b =>
                {
                    b.Property<string>("TRANSPORT_ADMIN_CODE")
                        .HasMaxLength(128);

                    b.Property<int>("TRUCK_MANAGE_NUMBER");

                    b.Property<string>("CHARGE")
                        .HasMaxLength(20);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("NUMBER")
                        .HasMaxLength(4);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("TRANSPORT_ADMIN_CODE", "TRUCK_MANAGE_NUMBER");

                    b.ToTable("TRUCK_ADMINs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_ACCOUNT", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ADDRESS1")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<string>("ADDRESS2")
                        .HasMaxLength(72);

                    b.Property<string>("COMPANY")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<bool>("CONFIRM_FLAG");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("CURRENT_SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<long>("DEFAULT_DELIVERY_ADMIN_ID");

                    b.Property<string>("DEFAULT_DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<bool>("DELETE_FLAG");

                    b.Property<string>("DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<bool>("EXPIRE_FLAG");

                    b.Property<string>("FAX")
                        .IsRequired();

                    b.Property<string>("KANA")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTimeOffset?>("LOGINED_AT");

                    b.Property<bool>("LOGIN_ENABLE_FLAG");

                    b.Property<string>("MAIL")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MAIL1")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL10")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL2")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL3")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL4")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL5")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL6")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL7")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL8")
                        .HasMaxLength(50);

                    b.Property<string>("MAIL9")
                        .HasMaxLength(50);

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<string>("PASSWORD")
                        .IsRequired();

                    b.Property<bool>("PASSWORD_CHANGE_REQUEST");

                    b.Property<string>("PASSWORD_SALT");

                    b.Property<DateTimeOffset?>("PASSWORD_UPDATED_AT");

                    b.Property<int>("PERMISSION");

                    b.Property<string>("TEL")
                        .IsRequired();

                    b.Property<string>("TRANSPORT_ADMIN_CODE")
                        .HasMaxLength(128);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<long?>("USER_ACCOUNT_ID");

                    b.Property<string>("USER_ID")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.Property<string>("ZIPCODE")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("TRANSPORT_ADMIN_CODE");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("USER_ACCOUNTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DELIVERY", b =>
                {
                    b.Property<long>("DELIVERY_ADMIN_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long?>("ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.HasKey("DELIVERY_ADMIN_ID", "USER_ACCOUNT_ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("USER_DELIVERies");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DEPARTMENT", b =>
                {
                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<string>("SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("USER_ACCOUNT_ID", "SHIPPER_CODE", "DEPARTMENT_CODE");

                    b.HasIndex("SHIPPER_CODE", "DEPARTMENT_CODE");

                    b.ToTable("USER_DEPARTMENTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DISPLAY_SETTING", b =>
                {
                    b.Property<int>("SCREEN_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<string>("PHYS_COLUMN_NAME")
                        .HasMaxLength(128);

                    b.Property<bool>("CHECK_STATUS");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<int>("DEFAULT_ORDER");

                    b.Property<int?>("DISPLAY_ORDER");

                    b.Property<string>("LOGI_COLUMN_NAME")
                        .HasMaxLength(128);

                    b.Property<int?>("SORT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.HasKey("SCREEN_ID", "USER_ACCOUNT_ID", "PHYS_COLUMN_NAME");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("USER_DISPLAY_SETTINGs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_ITEM", b =>
                {
                    b.Property<long>("STOCK_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("ITEM1_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("ITEM1_VALUE")
                        .HasMaxLength(50);

                    b.Property<string>("ITEM2_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("ITEM2_VALUE")
                        .HasMaxLength(50);

                    b.Property<string>("ITEM3_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("ITEM3_VALUE")
                        .HasMaxLength(50);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("STOCK_ID", "USER_ACCOUNT_ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("USER_ITEMs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_SEARCH_CONDITION", b =>
                {
                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<bool>("CLASS1");

                    b.Property<bool>("CLASS2");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<bool>("CUSTOMER_ITEM");

                    b.Property<bool>("NOTE");

                    b.Property<bool>("PROCESSING_DATE");

                    b.Property<bool>("PRODUCT_DATE");

                    b.Property<bool>("REGIST_DATE");

                    b.Property<bool>("REMARK1");

                    b.Property<bool>("REMARK2");

                    b.Property<bool>("SCRAP_SCHEDULE_DATE");

                    b.Property<bool>("SHIPPER_RETURN");

                    b.Property<bool>("STORAGE_DATE");

                    b.Property<bool>("STORAGE_MANAGE_NUMBER");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.HasKey("USER_ACCOUNT_ID");

                    b.ToTable("USER_SEARCH_CONDITIONs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WATCHLIST", b =>
                {
                    b.Property<long>("STOCK_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.HasKey("STOCK_ID", "USER_ACCOUNT_ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("WATCHLISTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<int>("DETAIL_COUNT");

                    b.Property<int>("REQUEST_COUNT_SUM");

                    b.Property<string>("REQUEST_KIND")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.HasIndex("USER_ACCOUNT_ID");

                    b.ToTable("WK_REQUESTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST_DELIVERY", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("COMMENT")
                        .HasMaxLength(100);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("DELIVERY_ADMIN_ID");

                    b.Property<string>("DELIVERY_CHARGE")
                        .HasMaxLength(72);

                    b.Property<string>("DELIVERY_DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("FLIGHT")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("SPECIFIED_DATE");

                    b.Property<string>("SPECIFIED_TIME")
                        .HasMaxLength(8);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<long>("WK_REQUEST_ID");

                    b.HasKey("ID");

                    b.HasIndex("DELIVERY_ADMIN_ID");

                    b.HasIndex("WK_REQUEST_ID")
                        .IsUnique();

                    b.ToTable("WK_REQUEST_DELIVERies");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST_DETAIL", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<int>("REQUEST_COUNT");

                    b.Property<long>("STOCK_ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("WK_REQUEST_ID");

                    b.HasKey("ID");

                    b.HasIndex("STOCK_ID");

                    b.HasIndex("WK_REQUEST_ID");

                    b.ToTable("WK_REQUEST_DETAILs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_STOCK", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CLASS1")
                        .HasMaxLength(8);

                    b.Property<string>("CLASS2")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<string>("CUSTOMER_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<string>("IMPORT_ERROR_MESSAGE")
                        .HasMaxLength(128);

                    b.Property<int>("IMPORT_LINE_NUMBER");

                    b.Property<string>("KIND")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("NOTE")
                        .HasMaxLength(200);

                    b.Property<string>("PRODUCT_DATE")
                        .HasMaxLength(10);

                    b.Property<string>("REMARK1")
                        .HasMaxLength(72);

                    b.Property<string>("REMARK2")
                        .HasMaxLength(72);

                    b.Property<DateTimeOffset?>("SCRAP_SCHEDULE_DATE");

                    b.Property<string>("SHAPE")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("SHIPPER_NOTE")
                        .HasMaxLength(2000);

                    b.Property<long>("STOCK_ID");

                    b.Property<string>("STORAGE_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<string>("SUBTITLE")
                        .HasMaxLength(200);

                    b.Property<string>("TIME1")
                        .HasMaxLength(3);

                    b.Property<string>("TIME2")
                        .HasMaxLength(3);

                    b.Property<string>("TITLE")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("USER_ACOUNT_ID");

                    b.HasKey("ID");

                    b.ToTable("WK_STOCKs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_TABLE_PAGINATION_SETTING", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long?>("USER_ACCOUNTID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<bool>("checkAllPage");

                    b.Property<int>("viewTableType");

                    b.HasKey("ID");

                    b.HasIndex("USER_ACCOUNTID");

                    b.ToTable("WK_TABLE_PAGINATION_SETTINGs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_TABLE_SELECTION_SETTING", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long?>("USER_ACCOUNTID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<string>("appendInfo");

                    b.Property<long>("originalDataId");

                    b.Property<bool>("selected");

                    b.Property<int>("viewTableType");

                    b.HasKey("ID");

                    b.HasIndex("USER_ACCOUNTID");

                    b.ToTable("WK_TABLE_SELECTION_SETTINGs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_USER_ACCOUNT", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("CURRENT_SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("DEFAULT_DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<bool>("IS_NEED_PASSWORD_UPDATE");

                    b.Property<string>("KANA")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NAME")
                        .IsRequired()
                        .HasMaxLength(72);

                    b.Property<string>("PASSWORD");

                    b.Property<int>("PERMISSION");

                    b.Property<string>("TRANSPORT_ADMIN_CODE")
                        .HasMaxLength(128);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<string>("USER_ID")
                        .IsRequired()
                        .HasMaxLength(40);

                    b.HasKey("ID");

                    b.ToTable("WK_USER_ACCOUNTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_USER_DEPARTMENT", b =>
                {
                    b.Property<long>("USER_ACCOUNT_ID");

                    b.Property<string>("SHIPPER_CODE")
                        .HasMaxLength(3);

                    b.Property<string>("DEPARTMENT_CODE")
                        .HasMaxLength(128);

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("USER_ACCOUNT_ID", "SHIPPER_CODE", "DEPARTMENT_CODE");

                    b.ToTable("WK_USER_DEPARTMENTs");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WMS_RESULT_HISTORY", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ARRIVAL_TIME")
                        .HasMaxLength(128);

                    b.Property<int>("CONFIRM_COUNT");

                    b.Property<DateTimeOffset>("CREATED_AT");

                    b.Property<long>("CREATED_USER_ACCOUNT_ID");

                    b.Property<string>("CUSTOMER_MANAGE_NUMBER")
                        .HasMaxLength(30);

                    b.Property<string>("NOTE")
                        .HasMaxLength(200);

                    b.Property<string>("ORDER_NUMBER")
                        .HasMaxLength(8);

                    b.Property<DateTimeOffset?>("PROCESSING_DATE");

                    b.Property<string>("PRODUCT_DATE")
                        .HasMaxLength(10);

                    b.Property<string>("REMARK1")
                        .HasMaxLength(72);

                    b.Property<string>("REMARK2")
                        .HasMaxLength(72);

                    b.Property<int>("REQUEST_COUNT");

                    b.Property<long>("REQUEST_HISTORY_DETAIL_ID");

                    b.Property<DateTimeOffset?>("SCRAP_SCHEDULE_DATE");

                    b.Property<string>("SHAPE")
                        .HasMaxLength(20);

                    b.Property<string>("SHIPPER_NOTE")
                        .HasMaxLength(2000);

                    b.Property<string>("SHIP_CHARGE_NAME")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_COMPANY")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_DEPARTMENT")
                        .HasMaxLength(72);

                    b.Property<string>("SHIP_RETURN_CODE")
                        .HasMaxLength(8);

                    b.Property<string>("SLIP_NUMBER")
                        .HasMaxLength(128);

                    b.Property<string>("STATUS")
                        .HasMaxLength(8);

                    b.Property<long>("STOCK_ID");

                    b.Property<DateTimeOffset?>("STORAGE_DATE");

                    b.Property<string>("STORAGE_MANAGE_NUMBER")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<DateTimeOffset?>("STORAGE_RETRIEVAL_DATE");

                    b.Property<string>("SUBTITLE")
                        .HasMaxLength(200);

                    b.Property<string>("TIME1")
                        .HasMaxLength(3);

                    b.Property<string>("TIME2")
                        .HasMaxLength(3);

                    b.Property<string>("TITLE")
                        .HasMaxLength(200);

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTimeOffset>("UPDATED_AT");

                    b.Property<long>("UPDATED_USER_ACCOUNT_ID");

                    b.HasKey("ID");

                    b.HasIndex("REQUEST_HISTORY_DETAIL_ID")
                        .IsUnique();

                    b.ToTable("WMS_RESULT_HISTORies");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_ADMIN", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.SHIPPER_ADMIN", "SHIPPER_ADMIN")
                        .WithMany("DELIVERY_ADMINs")
                        .HasForeignKey("SHIPPER_CODE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_REQUEST", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.TRANSPORT_ADMIN", "TRANSPORT_ADMIN")
                        .WithMany("DELIVERY_REQUESTs")
                        .HasForeignKey("TRANSPORT_ADMIN_CODE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DELIVERY_REQUEST_DETAIL", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.TRANSPORT_ADMIN", "TRANSPORT_ADMIN")
                        .WithMany("DELIVERY_REQUEST_DETAILs")
                        .HasForeignKey("TRANSPORT_ADMIN_CODE")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("RazorPagesLearning.Data.Models.DELIVERY_REQUEST", "DELIVERY_REQUEST")
                        .WithMany("DELIVERY_REQUEST_DETAILs")
                        .HasForeignKey("TRANSPORT_ADMIN_CODE", "DELIVERY_REQUEST_NUMBER")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.DEPARTMENT_ADMIN", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.SHIPPER_ADMIN", "SHIPPER_ADMIN")
                        .WithMany("DEPARTMENT_ADMINs")
                        .HasForeignKey("SHIPPER_CODE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.PASSWORD_HISTORY", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("PASSWORD_HISTORYs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.REQUEST_HISTORY_DETAIL", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.REQUEST_HISTORY", "REQUEST_HISTORY")
                        .WithMany("REQUEST_HISTORY_DETAILs")
                        .HasForeignKey("REQUEST_HISTORY_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.REQUEST_LIST", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.STOCK", "STOCK")
                        .WithMany("REQUEST_LISTs")
                        .HasForeignKey("STOCK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("REQUEST_LISTs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.STOCK", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.WK_STOCK", "WK_STOCK")
                        .WithOne("STOCK")
                        .HasForeignKey("RazorPagesLearning.Data.Models.STOCK", "WK_STOCK_ID");

                    b.HasOne("RazorPagesLearning.Data.Models.DEPARTMENT_ADMIN", "DEPARTMENT_ADMIN")
                        .WithMany("STOCKs")
                        .HasForeignKey("SHIPPER_CODE", "DEPARTMENT_CODE");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.TRUCK_ADMIN", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.TRANSPORT_ADMIN", "TRANSPORT_ADMIN")
                        .WithMany("TRUCK_ADMINs")
                        .HasForeignKey("TRANSPORT_ADMIN_CODE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_ACCOUNT", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.TRANSPORT_ADMIN", "TRANSPORT_ADMIN")
                        .WithMany()
                        .HasForeignKey("TRANSPORT_ADMIN_CODE");

                    b.HasOne("RazorPagesLearning.Data.Models.WK_USER_ACCOUNT", "WK_USER_ACCOUNT")
                        .WithMany()
                        .HasForeignKey("USER_ACCOUNT_ID");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DELIVERY", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.DELIVERY_ADMIN", "DELIVERY_ADMIN")
                        .WithMany("USER_DELIVERies")
                        .HasForeignKey("DELIVERY_ADMIN_ID");

                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("USER_DELIVERies")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DEPARTMENT", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("USER_DEPARTMENTs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.DEPARTMENT_ADMIN", "DEPARTMENT_ADMIN")
                        .WithMany("USER_DEPARTMENTs")
                        .HasForeignKey("SHIPPER_CODE", "DEPARTMENT_CODE")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_DISPLAY_SETTING", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("DISPLAY_SETTINGs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_ITEM", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.STOCK", "STOCK")
                        .WithMany("USER_ITEMs")
                        .HasForeignKey("STOCK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("USER_ITEMs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.USER_SEARCH_CONDITION", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany()
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WATCHLIST", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.STOCK", "STOCK")
                        .WithMany("WATCHLISTs")
                        .HasForeignKey("STOCK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("WATCHLISTs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("WK_REQUESTs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST_DELIVERY", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.DELIVERY_ADMIN", "DELIVERY_ADMIN")
                        .WithMany()
                        .HasForeignKey("DELIVERY_ADMIN_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.WK_REQUEST", "WK_REQUEST")
                        .WithOne("WK_REQUEST_DELIVERY")
                        .HasForeignKey("RazorPagesLearning.Data.Models.WK_REQUEST_DELIVERY", "WK_REQUEST_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_REQUEST_DETAIL", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.STOCK", "STOCK")
                        .WithMany("WK_REQUEST_DETAILs")
                        .HasForeignKey("STOCK_ID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RazorPagesLearning.Data.Models.WK_REQUEST", "WK_REQUEST")
                        .WithMany("WK_REQUEST_DETAILs")
                        .HasForeignKey("WK_REQUEST_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_TABLE_PAGINATION_SETTING", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT")
                        .WithMany("WK_TABLE_PAGINATION_SETTINGs")
                        .HasForeignKey("USER_ACCOUNTID");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_TABLE_SELECTION_SETTING", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.USER_ACCOUNT")
                        .WithMany("WK_TABLE_SELECTION_SETTINGs")
                        .HasForeignKey("USER_ACCOUNTID");
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WK_USER_DEPARTMENT", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.WK_USER_ACCOUNT", "USER_ACCOUNT")
                        .WithMany("USER_DEPARTMENTs")
                        .HasForeignKey("USER_ACCOUNT_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RazorPagesLearning.Data.Models.WMS_RESULT_HISTORY", b =>
                {
                    b.HasOne("RazorPagesLearning.Data.Models.REQUEST_HISTORY_DETAIL", "REQUEST_HISTORY_DETAIL")
                        .WithOne("WMS_RESULT_HISTORY")
                        .HasForeignKey("RazorPagesLearning.Data.Models.WMS_RESULT_HISTORY", "REQUEST_HISTORY_DETAIL_ID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
